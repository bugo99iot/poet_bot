download poems from here:
https://www.poemhunter.com/p/m/l.asp?a=0&l=top500&order=title&p=1
page 1 to 20

- remove stop-words and punctuation (watch out for won't vs wont), small-font, select verbs, adj and nouns* lemmatize, tokenise, find average length, shuffle and cut
  (you will need to use recursive neural networks otherwise)

- vectorise and normalise (multinomial)

- ask for imput and repeat process above for input test

- find nearest neighbour and print it
  https://www.youtube.com/watch?v=0JsHvXmU0dA


*
import nltk
sentence = """At eight o'clock on Thursday morning Arthur didn't feel very good."""
tokens = nltk.word_tokenize(sentence)
tokens
['At', 'eight', "o'clock", 'on', 'Thursday', 'morning', 'Arthur', 'did', "n't", 'feel', 'very', 'good', '.']
tagged = nltk.pos_tag(tokens)
tagged[0:6]
[('At', 'IN'), ('eight', 'CD'), ("o'clock", 'JJ'), ('on', 'IN'),
('Thursday', 'NNP'), ('morning', 'NN')]

or  

sentence = "At eight o'clock on Thursday film morning word line test best beautiful Ram Aaron design"
>>> nouns = [token for token, pos in pos_tag(word_tokenize(sentence)) if pos.startswith('N')]

